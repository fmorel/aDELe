FA divi:
   DA adu			#2nd argument (b)
   DA anu			#1st argument (a)

   BA ara anu			# r = a
   BA aqa 0			# q = 0
   BA ana 0			# n = 0
   BA axu adu			# aux = b

lolo:				# while (aux <= a)
   TA axu >papa			# Store aux<<1 on papa
   BA axu axu FA 2		# aux <<=1
   BA ana ana PA 1		# n++
   HOPLAGA lolo anu MA axu
   HOPLAZA lolo anu MA axu

lili:
   DA axu <papa			# aux >>= 1
   BA ana ana MA 1		# n--
   BA aqa aqa FA 2		# q <<= 1
   HOPLAGA lilico axu MA ara	# if !(r>=aux)
   BA ara ara MA axu		# r = r - aux
   BA aqa aqa PA 1		# q++
lilico:
   HOPLAGA lili ana

   TA aqa
   TA ara
   ORWAR

FA debu:
   DA emi			# Argument
   BA ivi 2			# Divisor
   BA ese emi MA 1
   HOPLAZA fini emi MA 2	# Case 2
   HOPLAGA begi emi MA 1	# All other cases
   BA ese 0
   HOPLA fini			# Case 0 and 1

begi:
   # case 2
   TA emi
   TA ivi
   HOPLAFA divi
   DA ese			# Rest
   DA oti			# Quotient
   HOPLAZA fini ese
   HOPLAZA fini oti MA 1
   BA ivi ivi PA 1		# Case ivi == 2: increment only by one

lopo:
   TA emi
   TA ivi
   HOPLAFA divi
   DA ese			# Rest
   DA oti			# Quotient

   # TA ivi
   # HOPLAFA sekasa
   # TA oti
   # HOPLAFA sekasa
   # TA ese
   # HOPLAFA sekasa

   HOPLAZA fini ese

   BA aca ivi FA ivi
   HOPLAGA fini aca MA emi      # stop if divisor is more than the square root of number

   # All other divisor: increment by to to avoid even divisors
   BA ivi ivi PA 2
   HOPLAGA lopo oti MA 1

fini:
   TA ese                       # Positive for true, zero for false
   ORWAR
